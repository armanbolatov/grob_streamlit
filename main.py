import streamlit as st
import requests


API_TOKEN = st.secrets['API_TOKEN']
API_URL = "https://api-inference.huggingface.co/models/steeldream/letov"
headers = {"Authorization": f"Bearer {API_TOKEN}"}


def query(payload):
    """Send a request to the API and return the response."""
    response = requests.post(API_URL, headers=headers, json=payload)
    return response.json()


if __name__ == '__main__':

    page_title = "–ù–µ–π—Ä–æ–Ω–Ω–∞—è –æ–±–æ—Ä–æ–Ω–∞ 2.0"
    page_icon = "üé∏"
    layout = "centered"

    st.set_page_config(page_title=page_title, page_icon=page_icon, layout=layout)

    streamlit_style = """
        <style>
        [data-testid="stText"] {
            font-size: 1rem;
            font-family: "Source Serif Pro", serif;
        }
        </style>
        """
    st.markdown(streamlit_style, unsafe_allow_html=True)

    st.title(page_title + " " + page_icon)
    st.markdown("""
        >_–ö–æ–≥–¥–∞ —è —É–º–µ—Ä, –Ω–µ –±—ã–ª–æ –Ω–∏–∫–æ–≥–æ, –∫—Ç–æ –±—ã —ç—Ç–æ –æ–ø—Ä–æ–≤–µ—Ä–≥._

        –ï–≥–æ—Ä –õ–µ—Ç–æ–≤ ‚Äî —Å–æ–≤–µ—Ç—Å–∫–∏–π –∏ —Ä–æ—Å—Å–∏–π—Å–∫–∏–π –º—É–∑—ã–∫–∞–Ω—Ç, –ø–æ—ç—Ç –∏ ¬´–ø–∞—Ç—Ä–∏–∞—Ä—Ö¬ª
        —Ä—É—Å—Å–∫–æ–≥–æ –ø–∞–Ω–∫-—Ä–æ–∫–∞. –û—Å–Ω–æ–≤–∞–Ω–Ω—ã–π –∏–º –º—É–∑—ã–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç
        [¬´–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∞—è –æ–±–æ—Ä–æ–Ω–∞¬ª](https://gr-oborona.ru/) (–ì—Ä–û–±) –±—ã–ª –æ–¥–Ω–∏–º
        –∏–∑ –≤–ª–∏—è—Ç–µ–ª—å–Ω–µ–π—à–∏—Ö –ø–∞–Ω–∫-–≥—Ä—É–ø–ø –†–æ—Å—Å–∏–∏ –∏ –°–°–°–†, –∏ —Ä–∞—Å–ø–∞–ª—Å—è –≤
        2008 –≥–æ–¥—É –≤ —Å–≤—è–∑–∏ —Å –∫–æ–Ω—á–∏–Ω–æ–π –ï–≥–æ—Ä–∞.
        
        –Ø –æ–±—É—á–∏–ª —è–∑—ã–∫–æ–≤—É—é –º–æ–¥–µ–ª—å [ruGPT3](https://sbercloud.ru/ru/datahub/rugpt3family/demo-ru-gpt3-xl)
        –Ω–∞ 600+ –ø–µ—Å–Ω—è—Ö –ì—Ä–û–±–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤ –ø–µ—Å–µ–Ω –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é, —á—Ç–æ–±—ã
        –ø–æ–Ω—è—Ç—å –∫–∞–∫ –¥–∞–Ω–Ω–∞—è –º–æ–¥–µ–ª—å ¬´–≤–∏–¥–∏—Ç¬ª –µ–≥–æ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ. –ì–∏—Ç—Ö–∞–± —Å —ç—Ç–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º –¥–æ—Å—Ç—É–ø–µ–Ω
        [—Ç—É—Ç](http://github.com/armanbolatov/grob).
        
        –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—Å–∞—Ç—å ‚Äî `a.bol[at]bc-pf[dot]org`.
        """)

    st.image("yegor.jpg", use_column_width=True)

    input = st.text_input(
        "–î–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–∏–¥—É–º–∞–π—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏",
        max_chars=50,
        placeholder="–í—Å—ë –∏–¥–µ—Ç –ø–æ –ø–ª–∞–Ω—É",
    )

    if input:

        payload = {
            "inputs": f"<s>–ù–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏: {input}\n–¢–µ–∫—Å—Ç –ø–µ—Å–Ω–∏:",
            "parameters": {
                "max_new_tokens": 250,
                "temperature": 1.0,
                "repetition_penalty": 1.05,
                "top_k": 5,
                "top_p": 1,
                "return_full_text": False,
            },
            "options": {
                "wait_for_model": True,
            }
        }

        with st.spinner("–ò–¥—ë—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏—è..."):
            output = query(payload)
            if "error" in output:
                if output["error"].startswith("Rate limit reached"):
                    st.error("""
                    –ú–æ–¥–µ–ª—å –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞ –º–æ–µ–º –±–∞–∑–æ–≤–æ–º –∞–∫–∫–∞—É–Ω—Ç–µ HuggingFace –∏ –Ω–∞ –Ω–µ–π
                    –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –±–µ—Å–ø–ª–∞—Ç–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (—Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –µ–∂–µ—á–∞—Å–Ω–æ).
                    –ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–¥–æ–∂–¥–∞—Ç—å ~—á–∞—Å –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–Ω–æ–≤–∞.
                    """)
                else:
                    st.error(output["error"])

        if "error" not in output:
            st.success("–ì–æ—Ç–æ–≤–æ!")
            st.subheader(input)
            output_text = output[0]["generated_text"]
            try:
                result = str(output_text[:output_text.index("</s>") + 1])[:-1]
            except:
                result = output_text
                result += "..."

            st.text(result)